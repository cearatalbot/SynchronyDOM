#we don't need to do that again
panel.border = element_rect(colour = "black", fill=NA, size=0.5),
axis.line = element_line(colour = NA),
#text elements
plot.subtitle = element_text(          #subtitle
family = font,            #font family
size = 17),               #font size
axis.title = element_text(             #axis titles
family = font,            #font family
size = 15),               #font size
axis.text = element_text(              #axis text
family = font,            #axis famuly
size = 11),                #font size
axis.text.x = element_text(            #margin for axis text
margin=margin(5, b = 10), angle = 35, vjust=1, hjust=1),
strip.background= element_blank(),
#since the legend often requires manual tweaking
#based on plot content, don't define it here
)
}
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="D", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
#read synchrony output
data<-read.csv(file="Out/SynchronyResults_2023Nov27.csv", stringsAsFactors=F)
data$LUgroup<-rep(c("allsites", "wetDominated", "mixed", "agDominated"), times=27) #32 if discharge included
data$var<-c(rep("DOC", times=4), rep("A350", times=4), rep("SR", times=4), rep("BA", times=4),
rep("FI", times=4),rep("HIX", times=4),
rep("C1", times=4), rep("C2", times=4), rep("C3", times=4),
rep("C4", times=4), rep("C5", times=4), rep("C6", times=4),
rep("C7", times=4), rep("SUVA254", times=4), rep("DO", times=4),
rep("pH", times=4), rep("SPC", times=4), rep("SRP", times=4),
rep("TDP", times=4), rep("TMP", times=4), rep("TP", times=4), rep("TSS", times=4),
rep("A254", times=4), rep("Cth", times=4),rep("Cmh", times=4),rep("Cmp", times=4),
rep("Cf", times=4))
data$varGroup<-c(rep("Limnological", times=4), rep("DOM", times=(4*13)),
rep("Limnological", times=(4*5)), rep("Physical", times=4),
rep("Limnological", times=(4*2)), rep("DOM", times=(4*5)))
borderTheme0.5<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 14),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 0.5, legend.position = "none")
borderTheme0.5Leg<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 14),legend.background=element_blank(),
axis.text.x=element_text(), legend.key=element_blank(), aspect.ratio = 0.5)
borderTheme1<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 15),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 0.3,
legend.key=element_blank(),legend.position = "none")
borderTheme1.5<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 15),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 1.8,
legend.key=element_blank())
borderThemeBox<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 15),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 0.2)
rmVars<-c("CHL", "SRP", "PC1", "PC2", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "E280")
for(i in 1:length(rmVars)){
data<-data[which(data$var!=rmVars[i]), ]
}
dataSub<-data[which(data$pVal < 0.05),] #susbet for significant data only
#cols<-c("black","#5F0F40", "#E36414", "#0F4C5C") #colors
#cols<-c("#170A1C",  "#9E0031", "#FFA62B", "#0B7189")
cols<-c("#6B5671",  "#F0606A", "#F5B266", "#71BCC1")
#write.csv(dataSub, "Out/significantSynchResults.csv", row.names=F)
Limno<-dataSub[dataSub$varGroup=="Limnological",]
Limno$LUgroup_f<-factor(Limno$LUgroup, levels=c("allsites", "agDominated", "mixed", "wetDominated"))
Physical<-dataSub[dataSub$varGroup=="Physical",]
Physical$LUgroup_f<-factor(Physical$LUgroup, levels=c("allsites", "agDominated", "mixed", "wetDominated"))
DOM<-dataSub[dataSub$varGroup=="DOM",]
DOM$LUgroup_f<-factor(DOM$LUgroup, levels=c("allsites", "agDominated", "mixed", "wetDominated"))
Limno$var_f<-factor(Limno$var, levels=unique(Limno$var))
Lim<-ggplot(data = Limno, aes(x=var_f, y=S, group=LUgroup_f))+
geom_jitter(size=3, alpha=1, aes(color = LUgroup_f), width=0.2)+
scale_colour_manual("Land use", values=cols, labels=c("All sites", "Agriculturally dominated", "Mixed", "Wetland dominated"))+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1, 0.25))+
scale_x_discrete("Variable")+
annotate("text", x=0.7, y=0.96, label= "B.", size=6)+
borderTheme0.5
Lim
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="D", limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
###GLEON C:CHL project
setwd("/Users/cearatalbot/Projects/CChl/")
library(ggplot2)
data_raw<-read.csv("C_Chla_cleaned_extracted_data.csv") #read in data
#checkout the density of observations..
ggplot(data=data_raw, aes(x=final_ratio, group=final_ratio_origin, fill=final_ratio_origin))+geom_density(alpha=0.5)
#I'm curious about the very high ratios and I want to know how the ranges differ depended on how the ratio was obtained (calculated vs. extracted)
range(data_raw$final_ratio[data_raw$final_ratio_origin=="calculated"], na.rm=T)
#there are bunch of infinite values
data_inf<-data_raw[which(!is.finite(data_raw$final_ratio)), ] #pull out rows with NA or infinite values
#for now, working only with real numbers..
data1<-data_raw[which(is.finite(data_raw$final_ratio)), ]
View(data1)
ext<-data1[data1$final_ratio_origin=="extracted", ]
View(ext)
unique(ext$particulate_organic_carbon_units)
unique(ext$chl_unit)
View(ext)
ext[which(ext$particulate_organic_carbon_units=="umol/L"),]
ext$chl_unit[which(ext$particulate_organic_carbon_units=="umol/L")]
ext[which(ext$particulate_organic_carbon_units=="umol"),]
ext$chl_unit[which(ext$particulate_organic_carbon_units=="umol"]
ext$chl_unit[which(ext$particulate_organic_carbon_units=="umol")]
ext$chl_unit[which(ext$particulate_organic_carbon_units=="umol")][1]
ext[which(ext$particulate_organic_carbon_units=="umol"),1]
ext[which(ext$particulate_organic_carbon_units=="umol"),]
ext[which(ext$particulate_organic_carbon_units=="umol"),]
28*3
28/1000000
28/1000000*(1/12)
28/1000000*(12
)
0.000336/0/001
0.000336/0.001
84/1000000*(12)
0.001008/.003
0.336/28
1/28
View(SynchronyResults)
#read synchrony output
data<-read.csv(file="Out/SynchronyResults_2023Nov27.csv", stringsAsFactors=F)
setwd("/Users/cearatalbot/Projects/SynchronyDOM/updatedDOM/")
#read synchrony output
data<-read.csv(file="Out/SynchronyResults_2023Nov27.csv", stringsAsFactors=F)
View(data)
#wd
setwd("/Users/cearatalbot/Projects/SynchronyDOM/updatedDOM/")
##Completed analyses for Synchrony DOM manuscript
#setup for synchrony, group land use, Moran's I
#####group stream sites###
#packages
library(vegan)
library(ggplot2)
library(dendextend)
library(cowplot)
library(ggpubr)
library(ggdendro)
install.packages("ggdendro")
library(ggdendro)
#wd
setwd("/Users/cearatalbot/Projects/SynchronyDOM/updatedDOM/")
#get supporting functions
source("synchrony/sFunctions.R") #supporting functions for analysis
#read data
dfSub<-read.csv(file="rawData/LandUse.csv", stringsAsFactors=F)
data<-read.csv(file="rawData/ASN_allData.csv", stringsAsFactors=F)
siteLookup<-read.csv("rawData/SiteNameNum.csv", stringsAsFactors = F)
#update means with 2019 data
dfSub$SiteNum<-NA
allsites<-dfSub[,1]
allsites<-nameToNumber(siteList=allsites, lookupTable = siteLookup)
dfSub$SiteNum<-allsites
#calculate means
for(i in 1:nrow(dfSub)){
dfSub$TDNavg[i]<-mean(as.numeric(data[which(data$Sample.Name==dfSub[i,12]), 32]),na.rm=T) #TDN
dfSub$TDPavg[i]<-mean(as.numeric(data[which(data$Sample.Name==dfSub[i,12]), 33]), na.rm=T) #TDP
dfSub$DOCavg[i]<-mean(as.numeric(data[which(data$Sample.Name==dfSub[i,12]), 5]), na.rm=T) #DOC
dfSub$TPavg[i]<-mean(as.numeric(data[which(data$Sample.Name==dfSub[i,12]), 36]), na.rm=T) #TP
dfSub$TSSavg[i]<-mean(as.numeric(data[which(data$Sample.Name==dfSub[i,12]), 37]), na.rm=T) #TSS
}
row.names(dfSub)<-as.character(unlist(dfSub[,1])) #use stream column to rename columns
dfSub<-dfSub[,-1 ] #delete the stream column and site number
#new##
#dfSub$CWetlaNA<-NULL
#dfSub$RWetlaNA<-NULL
#dfSub$CTotalCrop<-NULL
#dfSub$RTotal.Crop<-NULL
#dfSub$Cmono<-NULL
row.names(dfSub)<-dfSub$SiteNum
d<-dist(dfSub[,1:10])
hc<-hclust(d)
hcd <- as.dendrogram(hc)
colorL<-c()
colorL[1:7]<-"#0F4C5C"
colorL[8:37]<-"#E36414"
colorL[38:45]<-"#5F0F40"
labels_colors(hcd)<-colorL
dendrop<-plot(hcd, ylab = "Height")
ddata <- dendro_data(hcd, type = "rectangle")
dplot<-ggdendrogram(hcd, rotate = FALSE, size = 3, ylab="Height", labels=T, )
dendro.plot <- dplot + theme(axis.text.y = element_text(size = 6))
dplot<-dplot+labs(y="Height")
p <- ggplot(segment(ddata)) +
geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) +
#coord_flip() +
#scale_y_reverse("Height", expand = c(0.2, 0))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(fill=NA),
axis.line.y.left=element_line(size=0.3),
text = element_text(size = 12),
)+
scale_y_continuous("Height", limits=c(0,200), breaks=seq(0,200, 50))+
geom_text(data = ddata$labels ,
aes(x = x, y = y, label = label), size = 3, vjust = 1.2, hjust=0.5) #color=colorL
p
View(dfSub)
install.packages("RColorBrewer")
library(RColorBrewer)
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_brewer(palette = "RdYlBu", limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_brewer(palette = "RdYlBu")+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
rlang::last_trace()
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_brewer(palette = "RdYlBu", type="seq", limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
ggsave(filename = "Figures/SynchronyLimnoVars_2023Nov27.png", plot=Lim, width = 6, height = 3, units= "in", device='png', dpi=320)
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_brewer(palette = "RdYlBu", type="seq", limits=c(0,1), breaks=c(0,0.5, 1.0))
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_brewer(palette = "RdYlBu", type="seq")
#scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
#scale_y_discrete("Limnology")
lim_tile
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_brewer(palette = "RdYlBu", type="div")
#scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
#scale_y_discrete("Limnology")
lim_tile
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "RdYlBu", type="div")
#scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
#scale_y_discrete("Limnology")
lim_tile
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "RdYlBu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
Phys<-ggplot(data = Physical, aes(x=var, y=S, group=LUgroup_f))+
geom_jitter(size=3, alpha=1,aes(color = LUgroup_f), width=0.2)+
scale_colour_manual("Land use",values=cols, labels=c("All sites", "Agriculturally dominated", "Mixed", "Wetland dominated"))+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1, 0.25))+
scale_x_discrete("Variable", labels=c("Temp"))+
annotate("text", x=0.6, y=0.96, label= "A.", size=6)+
borderTheme1.5
Phys
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "RdYlBu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
##Figures of synchrony analysis
#Libraries
library(ggplot2)
library(cowplot)
library(ggpubr)
library(RColorBrewer)
setwd("/Users/cearatalbot/Projects/SynchronyDOM/updatedDOM/")
#read synchrony output
data<-read.csv(file="Out/SynchronyResults_2023Nov27.csv", stringsAsFactors=F)
data$LUgroup<-rep(c("allsites", "wetDominated", "mixed", "agDominated"), times=27) #32 if discharge included
data$var<-c(rep("DOC", times=4), rep("A350", times=4), rep("SR", times=4), rep("BA", times=4),
rep("FI", times=4),rep("HIX", times=4),
rep("C1", times=4), rep("C2", times=4), rep("C3", times=4),
rep("C4", times=4), rep("C5", times=4), rep("C6", times=4),
rep("C7", times=4), rep("SUVA254", times=4), rep("DO", times=4),
rep("pH", times=4), rep("SPC", times=4), rep("SRP", times=4),
rep("TDP", times=4), rep("TMP", times=4), rep("TP", times=4), rep("TSS", times=4),
rep("A254", times=4), rep("Cth", times=4),rep("Cmh", times=4),rep("Cmp", times=4),
rep("Cf", times=4))
data$varGroup<-c(rep("Limnological", times=4), rep("DOM", times=(4*13)),
rep("Limnological", times=(4*5)), rep("Physical", times=4),
rep("Limnological", times=(4*2)), rep("DOM", times=(4*5)))
borderTheme0.5<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 14),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 0.5, legend.position = "none")
borderTheme0.5Leg<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 14),legend.background=element_blank(),
axis.text.x=element_text(), legend.key=element_blank(), aspect.ratio = 0.5)
borderTheme1<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 15),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 0.3,
legend.key=element_blank(),legend.position = "none")
borderTheme1.5<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 15),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 1.8,
legend.key=element_blank())
borderThemeBox<-theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
panel.background = element_rect(colour = "black", size=1, fill=NA),
strip.background = element_blank(),
panel.spacing = unit(0.3, "lines"), axis.ticks.length = unit(0.2, "lines"),
text = element_text(size = 15),legend.background=element_blank(),
axis.text.x=element_text(), aspect.ratio = 0.2)
rmVars<-c("CHL", "SRP", "PC1", "PC2", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "E280")
for(i in 1:length(rmVars)){
data<-data[which(data$var!=rmVars[i]), ]
}
dataSub<-data[which(data$pVal < 0.05),] #susbet for significant data only
#cols<-c("black","#5F0F40", "#E36414", "#0F4C5C") #colors
#cols<-c("#170A1C",  "#9E0031", "#FFA62B", "#0B7189")
cols<-c("#6B5671",  "#F0606A", "#F5B266", "#71BCC1")
brewer.pal(n = 8, name = "YlGn")
#write.csv(dataSub, "Out/significantSynchResults.csv", row.names=F)
Limno<-dataSub[dataSub$varGroup=="Limnological",]
Limno$LUgroup_f<-factor(Limno$LUgroup, levels=c("allsites", "agDominated", "mixed", "wetDominated"))
Physical<-dataSub[dataSub$varGroup=="Physical",]
Physical$LUgroup_f<-factor(Physical$LUgroup, levels=c("allsites", "agDominated", "mixed", "wetDominated"))
DOM<-dataSub[dataSub$varGroup=="DOM",]
DOM$LUgroup_f<-factor(DOM$LUgroup, levels=c("allsites", "agDominated", "mixed", "wetDominated"))
Limno$var_f<-factor(Limno$var, levels=unique(Limno$var))
Lim<-ggplot(data = Limno, aes(x=var_f, y=S, group=LUgroup_f))+
geom_jitter(size=3, alpha=1, aes(color = LUgroup_f), width=0.2)+
scale_colour_manual("Land use", values=cols, labels=c("All sites", "Agriculturally dominated", "Mixed", "Wetland dominated"))+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1, 0.25))+
scale_x_discrete("Variable")+
annotate("text", x=0.7, y=0.96, label= "B.", size=6)+
borderTheme0.5
Lim
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "RdYlBu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
Phys<-ggplot(data = Physical, aes(x=var, y=S, group=LUgroup_f))+
geom_jitter(size=3, alpha=1,aes(color = LUgroup_f), width=0.2)+
scale_colour_manual("Land use",values=cols, labels=c("All sites", "Agriculturally dominated", "Mixed", "Wetland dominated"))+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1, 0.25))+
scale_x_discrete("Variable", labels=c("Temp"))+
annotate("text", x=0.6, y=0.96, label= "A.", size=6)+
borderTheme1.5
Phys
phys_tile<-ggplot(Physical, aes(x=LUgroup_f, y=var, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="D", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_y_discrete("Physical", labels=c("Temp"))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
phys_tile
DOM$var_f<-factor(DOM$var, levels=unique(DOM$var))
pDOM<-ggplot(data = , aes(x=var_f, y=S, group=LUgroup_f))+
geom_jitter(size=3, alpha=1, aes(color = LUgroup_f), width=0.2)+
scale_colour_manual("Land use",values=cols, labels=c("All sites", "Agriculturally dominated", "Mixed", "Wetland dominated"))+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1, 0.25))+
scale_x_discrete("Variable", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
annotate("text", x=0.8, y=0.96, label= "C.", size=6)+
borderTheme0.5
pDOM<-ggplot(data =DOM , aes(x=var_f, y=S, group=LUgroup_f))+
geom_jitter(size=3, alpha=1, aes(color = LUgroup_f), width=0.2)+
scale_colour_manual("Land use",values=cols, labels=c("All sites", "Agriculturally dominated", "Mixed", "Wetland dominated"))+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1, 0.25))+
scale_x_discrete("Variable", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
annotate("text", x=0.8, y=0.96, label= "C.", size=6)+
borderTheme0.5
pDOM
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "RdYlBu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "RdYlBu", type="div",limits=c(0,1), breaks=c(0,0.5, 0.9))+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
phys_tile<-ggplot(Physical, aes(x=LUgroup_f, y=var, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="D", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 0.9))+
scale_y_discrete("Physical", labels=c("Temp"))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
phys_tile
phys_tile<-ggplot(Physical, aes(x=LUgroup_f, y=var, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="D", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 0.8))+
scale_y_discrete("Physical", labels=c("Temp"))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
phys_tile
View(Physical)
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "BuPu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "BuPu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0), direction=-1)+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "BuPu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0), direction=1)+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
phys_tile<-ggplot(Physical, aes(x=LUgroup_f, y=var, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "BuPu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0), direction=1)+
scale_y_discrete("Physical", labels=c("Temp"))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
phys_tile
lim_tile<-ggplot(Limno, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_distiller(palette = "BuPu", type="div",limits=c(0,1), breaks=c(0,0.5, 1.0), direction=1)+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
scale_y_discrete("Limnology")
lim_tile
dom_tile<-ggplot(DOM, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
dom_tile
sw<-rbind(Physical, Limno, DOM)
Physical$var_f<-factor(Physical$var, levels=unique(Physical$var))
sw<-rbind(Physical, Limno, DOM)
all_tile<-ggplot(sw, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
all_tile
all_tile<-ggplot(sw, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
facet_wrap(varGroup)
all_tile<-ggplot(sw, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
facet_wrap(.varGroup)
all_tile<-ggplot(sw, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
facet_wrap(~.varGroup)
all_tile
all_tile<-ggplot(sw, aes(x=LUgroup_f, y=var_f, group=varGroup))+geom_tile(aes(fill=S))+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))+
facet_wrap(vars(varGroup))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, group=LUgroup_f))+geom_boxplot()+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))+
scale_x_discrete("", labels=c("All sites", "Agriculturally \ndominated", "Mixed", "Wetland \ndominated"))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, group=LUgroup_f))+geom_boxplot()+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))+
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, group=LUgroup_f))+geom_boxplot()+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, group=var_f, fill=LUgroup_f))+geom_boxplot()+theme_cjt()+
scale_fill_viridis_c("Synchrony", option="A", begin=0.1, limits=c(0,1), breaks=c(0,0.5, 1.0))
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, group=var_f, fill=LUgroup_f))+geom_boxplot()+theme_cjt()+
scale_fill_viridis_d("Synchrony", option="A", begin=0.1)
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, fill=LUgroup_f))+
stat_boxplot(geom ='errorbar', width = 0.7)+
geom_boxplot(alpha=1, width=0.7, )+
theme_cjt()+
scale_fill_viridis_d("Synchrony", option="A", begin=0.1)
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S))+
stat_boxplot(geom ='errorbar', width = 0.7)+
geom_boxplot(alpha=1, width=0.7, )+
theme_cjt()+
scale_fill_viridis_d("Synchrony", option="A", begin=0.1)
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
all_tile<-ggplot(sw, aes(x=var_f, y=S, fill=varGroup))+
stat_boxplot(geom ='errorbar', width = 0.7)+
geom_boxplot(alpha=1, width=0.7, )+
theme_cjt()+
scale_fill_viridis_d("Synchrony", option="A", begin=0.1)
#scale_y_discrete("DOM", labels=c(expression("A"[350]), "SR", "\u03B2:\u03B1", "FI", "HIX", expression("SUVA"[254]), expression( "C"[TH]),expression("C"[MH]),expression("C"[MP]), expression("C"[F])))
all_tile
